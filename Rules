#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.
preprocess do
  def debug_print
    items.each do |i|
      puts "item #{i}"
      puts "parent #{i.parent}"
      puts "identifier #{i.identifier}"
      puts "children #{i.children}"
      puts "type #{i.type}"
      puts "site #{i.site}"
      puts "attributes #{i.attributes}"
      puts "raw filename #{i.raw_filename}"
      puts "reps #{i.reps}"
      #puts i.raw_content
      #puts i.path
      #puts i.methods.sort-Object.methods
      puts "-----------------"
    end
  end

  def collect_biblio_items
    @biblio_items = items.select { |i| i[:type] == "biblio" }
    @config[:biblio] = @biblio_items
  end

  # debug_print

  collect_biblio_items
end

compile '*' do
  if item[:extension] == 'css'
    filter :relativize_paths, type: :css
  elsif item.binary?
    # don’t filter binary items
  elsif item[:extension] == 'js'
    # do nothing
  else
    filter :erb
    filter :bluecloth
    filter :encode
    layout 'default'
    filter :relativize_paths, type: :html
  end
end

route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.css'
  elsif item[:extension] == 'js'
    # Write item with identifier /foo/ to /foo.js
    item.identifier.chop + '.js'
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + (item[:extension] ? '.' + item[:extension] : '')
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
